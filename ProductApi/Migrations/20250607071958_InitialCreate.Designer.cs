// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApi.Data;

#nullable disable

namespace ProductApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250607071958_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Electronics",
                            Description = "Electronic devices and accessories"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Clothing",
                            Description = "Apparel and fashion items"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Books",
                            Description = "Books and publications"
                        });
                });

            modelBuilder.Entity("ProductApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DeliveryTimeSpan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProductSku")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            CategoryName = "",
                            CreatedDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryTimeSpan = "",
                            ProductDescription = "Description for product 1",
                            ProductImageUrl = "",
                            ProductName = "Product 1",
                            ProductPrice = 99.99m,
                            ProductShortName = "Prod1",
                            ProductSku = "SKU001"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            CategoryName = "",
                            CreatedDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryTimeSpan = "",
                            ProductDescription = "Description for product 2",
                            ProductImageUrl = "",
                            ProductName = "Product 2",
                            ProductPrice = 149.99m,
                            ProductShortName = "Prod2",
                            ProductSku = "SKU002"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            CategoryName = "",
                            CreatedDate = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeliveryTimeSpan = "",
                            ProductDescription = "Description for product 3",
                            ProductImageUrl = "",
                            ProductName = "Product 3",
                            ProductPrice = 199.99m,
                            ProductShortName = "Prod3",
                            ProductSku = "SKU003"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
